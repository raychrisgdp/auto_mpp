"""Add description column to role

Revision ID: afc4ca6f6853
Revises: 
Create Date: 2024-09-06 10:57:24.094017

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "afc4ca6f6853"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("personnel", schema=None) as batch_op:
        batch_op.add_column(sa.Column("role_id", sa.Integer(), nullable=True))
        batch_op.create_foreign_key(
            "fk_personnel_role", "role", ["role_id"], ["id"]
        )  # Added constraint name

    with op.batch_alter_table("role", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("description", sa.String(length=100), nullable=True)
        )
        batch_op.alter_column(
            "name",
            existing_type=sa.VARCHAR(length=100),
            type_=sa.String(length=50),
            existing_nullable=False,
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("role", schema=None) as batch_op:
        batch_op.alter_column(
            "name",
            existing_type=sa.String(length=50),
            type_=sa.VARCHAR(length=100),
            existing_nullable=False,
        )
        batch_op.drop_column("description")

    with op.batch_alter_table("personnel", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_column("role_id")

    # ### end Alembic commands ###
